### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mall {
  id: Int!
  mall_name: String!
  mall_no: Int!
  partner: Partner!
}

input MallWhereUniqueInput {
  id: Int
}

type Mutation {
  createDraft(body: String!, title: String!): Post!
  createPartner(partner: PartnerCreateInput): Partner!
  createUser(email: String!, partner_id: Int!, password: String!): User!
  publish(draftId: Int!): Post!
  signIn(email: String!, password: String!): AuthPayload!
  updateUser(user: UserUpdateInput): User!
}

type Partner {
  code: String
  created_at: DateTime!
  id: Int!
  malls(after: MallWhereUniqueInput, before: MallWhereUniqueInput, first: Int, last: Int): [Mall!]!
  name: String
  updated_at: DateTime!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input PartnerCreateInput {
  code: String
  email: String!
  name: String!
  nickname: String
  password: String!
}

type Permission {
  code: String!
  id: Int!
  name: String!
}

type Post {
  body: String!
  id: Int!
  published: Boolean!
  title: String!
}

type Query {
  drafts: [Post!]!
  partners: [Partner!]
  permissions(code: String, name: String): [Permission!]
  posts: Post!
  users: [User!]
}

type User {
  created_at: DateTime!
  email: String!
  id: Int!
  is_admin: Int!
  nickname: String
  partner: Partner!
  password: String!
  permissions: [Permission!]!
  updated_at: DateTime!
}

input UserUpdateInput {
  email: String!
  nickname: String
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
